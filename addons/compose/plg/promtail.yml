apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: promtail
    release: calling-quail
  name: promtail
  namespace: common-server
---
# Source: promtail/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: promtail
    release: calling-quail
  name: promtail-clusterrole
  namespace: common-server
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "watch", "list"]
---
# Source: promtail/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail-clusterrolebinding
  labels:
    app: promtail
    release: calling-quail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: common-server
roleRef:
  kind: ClusterRole
  name: promtail-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: promtail/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: promtail
  namespace: common-server
  labels:
    app: promtail
    release: calling-quail
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [promtail]
---
# Source: promtail/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: promtail
  namespace: common-server
  labels:
    app: promtail
    release: calling-quail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promtail
subjects:
- kind: ServiceAccount
  name: promtail

---
# Source: promtail/templates/daemonset.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
  namespace: common-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail      
    spec:
      serviceAccountName: promtail
      containers:
        - name: promtail
          image: registry.cn-shenzhen.aliyuncs.com/4d_prom/promtail:2.1.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/promtail/promtail.yml
            - -client.url=http://loki:3100/loki/api/v1/push
          volumeMounts:
            - name: config-volume
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - mountPath: logs
              name: logs-cn
              readOnly: true
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          ports:
            - containerPort: 9080
              name: http-metrics
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1         
      volumes:
        - name: config-volume
          hostPath:
            path: /ops/common/plg/promtail/conf
        - name: run
          hostPath:
            path: /ops/common/plg/promtail/position
        - hostPath:
            path: /ops/logs
          name: logs-cn
      imagePullSecrets:
      - name: 4dtc          
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: promtail
  name: promtail
  namespace: common-server
spec:
  ports:
  - name: http
    port: 9080
    nodePort: 31008
  selector:
    app: promtail
  type: NodePort          

